#! /usr/bin/env php
<?php require __DIR__.'/../config.php';

use App\Comparators\Abstracts;
use App\Comparators\Authors;
use App\Comparators\Emails;
use App\Comparators\References;
use App\Comparators\Title;
use App\ConsoleMessage as Message;
use App\ExtractorFactory;

$opt = getopt('t:f:');

if (!isset($opt['t'])) {
    Message::error('Error: You must specify a tool to compare results');
}

if (!isset($opt['f'])) {
    Message::error('Error: You must specify the JSON file');
}

$file = rtrim($opt['f'], '/');
$tool = $opt['t'];
$area = explode('/', $file)[1];

$content = file_get_contents($file);
$json = json_decode($content);

$individual = [];
$sum = [];
$results = [];
$count = 0;

foreach ($json->papers as $key => $paper) {
    
    $count++;

    $filename = $paper->filename;
    $filenoext = str_replace('.'.getextension($filename), '', $filename);
    $title = $paper->title;

    $authors = [];
    $emails = [];

    foreach ($paper->authors as $key => $author) {
        $authors[] = $author->name;
        $emails[] = $author->email;
    }

    $abstract = $paper->abstract;
    $references = $paper->references;

    $output = file_get_contents("outputs/$area/$tool/{$filenoext}.xml");
    
    $extractor = ExtractorFactory::create($tool, $output);

    $result_title = Title::compare($title, $extractor->getTitle());
    $result_authors = Authors::compare($authors, $extractor->getAuthors());
    $result_emails = Emails::compare($emails, $extractor->getEmails());
    $result_abstract = Abstracts::compare($abstract, $extractor->getAbstract());
    $result_references = References::compare($references, $extractor->getReferences());

    $individual[$filename] = [
        'title' => $result_title,
        'authors' => $result_authors,
        'emails' => $result_emails,
        'abstract' => $result_abstract,
        'references' => $result_references,
    ];

    $sum['title'][] = $result_title;
    $sum['authors'][] = $result_authors;
    $sum['emails'][] = $result_emails;
    $sum['abstract'][] = $result_abstract;
    $sum['references'][] = $result_references;
}

foreach ($sum as $metadata => $values) {

    if ($metadata == 'emails') {
        $values = array_filter($values, function($value) {
            return $value != -1;
        });
    }

    $total = count($values);

    if ($total == 0) {
        $average = -1;
    } else {
        $average = array_sum($values)/$total;
        $average = round($average, 2);
    }

    $results[$metadata] = $average;
}

$content = json_encode(['results' => $individual], JSON_PRETTY_PRINT);
$output = "outputs/$area/$tool/__results-individual.json";
file_put_contents($output, $content);

$content = json_encode(['average' => $results], JSON_PRETTY_PRINT);
$output = "outputs/$area/$tool/__results-average.json";
file_put_contents($output, $content);

Message::info("Getting [$tool] extraction --> $area");
